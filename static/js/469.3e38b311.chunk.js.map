{"version":3,"file":"static/js/469.3e38b311.chunk.js","mappings":"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","sources":["components/HOC/AuthRedirect.js","webpack://reactlearning1/./src/components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css?a7c9","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","webpack://reactlearning1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://reactlearning1/./src/components/Profile/MyPosts/Posts/Posts.module.css?b7f9","components/Profile/MyPosts/Posts/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsConteiner.jsx","components/Profile/Profile.jsx","components/Profile/ProfileConteiner.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nlet mapStateToPropsForRedirect = State => ({\r\n\tisAuth: State.auth.isAuth,\r\n})\r\nexport const withAuthRedirect = Component => {\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Navigate to='/login' />\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n\t\tRedirectComponent\r\n\t)\r\n\treturn ConnectedAuthRedirectComponent\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2qJPS\",\"mainPhoto\":\"ProfileInfo_mainPhoto__mqKK+\",\"contact\":\"ProfileInfo_contact__c-2Mf\"};","import React, { useEffect, useState } from 'react'\r\nimport c from './ProfileInfo.module.css'\r\nconst ProfileStatusWithHook = props => {\r\n\tlet [editMode, setEditmode] = useState(false)\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditmode(true)\r\n\t}\r\n\tlet [status, setStatus] = useState(props.status)\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditmode(false)\r\n\t\tprops.updateStatus(status)\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tsetStatus(props.status)\r\n\t}, [props.status])\r\n\tconst onStatusChange = event => {\r\n\t\tsetStatus(event.currentTarget.value)\r\n\t}\r\n\t/* componentDidUpdate(prevProps, prevState) {\r\n\t\tif (prevProps.status !== this.props.status) {\r\n\t\t\tthis.setState({ status: this.props.status })\r\n\t\t}\r\n\t} */\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>Status:</b>\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status || '---'}</span>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{editMode && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\t\tvalue={status}\r\n\t\t\t\t\t></input>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default ProfileStatusWithHook\r\n","import React from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport style from './ProfileInfo.module.css'\r\nimport {\r\n\tCreateField,\r\n\tInput,\r\n\tTextarea,\r\n} from '../../../common/FormsControls/FormsControls'\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<button>save</button>\r\n\t\t\t</div>\r\n\t\t\t{error && <div className={style.formSummaryError}>{error}</div>}\r\n\t\t\t<div>\r\n\t\t\t\t<b>Full Name</b> {CreateField('fullName', [], 'fullName', Input)}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>looking for job</b>{' '}\r\n\t\t\t\t{CreateField('', [], 'lookingForAJob', Input, { type: 'checkbox' })}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>My professional skills</b>\r\n\t\t\t\t{CreateField(\r\n\t\t\t\t\t'My professional skills',\r\n\t\t\t\t\t[],\r\n\t\t\t\t\t'lookingForAJobDescription',\r\n\t\t\t\t\tTextarea\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>About me</b>\r\n\t\t\t\t{CreateField('aboutMe', [], 'aboutMe', Textarea)}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Contacts</b>:\r\n\t\t\t\t{Object.keys(profile.contacts).map(key => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div key={key} className={style.contact}>\r\n\t\t\t\t\t\t\t<b>\r\n\t\t\t\t\t\t\t\t{key}:{CreateField(key, [], 'contacts.' + key, Textarea)}\r\n\t\t\t\t\t\t\t</b>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile' })(\r\n\tProfileDataForm\r\n)\r\nexport default ProfileDataFormReduxForm\r\n","import React, { useState } from 'react'\r\nimport Preloader from '../../../common/preloader/preloader'\r\nimport style from './ProfileInfo.module.css'\r\nimport userPhoto from './../../../../assets/imgs/user.jpg'\r\nimport ProfileStatusWithHook from './ProfileStatusWithHook'\r\nimport ProfileDataForm from './ProfileDataForm'\r\nconst ProfileInfo = props => {\r\n\tlet [editMode, setEditmode] = useState(false)\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\tconst mainPhotoSelectedOn = e => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tprops.savePhoto(e.target.files[0])\r\n\t\t}\r\n\t}\r\n\tconst onSubmit = formData => {\r\n\t\tprops.saveProfile(formData).then(() => {\r\n\t\t\tsetEditmode(false)\r\n\t\t\tconsole.log(formData)\r\n\t\t})\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <div>\r\n\t\t\t\t<img src='https://images.unsplash.com/photo-1629662182419-960a8596bba0?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwcm9maWxlLXBhZ2V8Mnx8fGVufDB8fHx8&w=1000&q=80'></img>\r\n\t\t\t</div> */}\r\n\t\t\t<div className={style.descriptionBlock}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={props.profile.photos.large || userPhoto}\r\n\t\t\t\t\tclassName={style.mainPhoto}\r\n\t\t\t\t/>\r\n\t\t\t\t{props.isOwner && (\r\n\t\t\t\t\t<input type={'file'} onChange={mainPhotoSelectedOn} />\r\n\t\t\t\t)}\r\n\t\t\t\t{editMode ? (\r\n\t\t\t\t\t<ProfileDataForm\r\n\t\t\t\t\t\tinitialValues={props.profile}\r\n\t\t\t\t\t\tprofile={props.profile}\r\n\t\t\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ProfileData\r\n\t\t\t\t\t\tprofile={props.profile}\r\n\t\t\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\t\t\tgoToEditMode={() => {\r\n\t\t\t\t\t\t\tsetEditmode(true)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<ProfileStatusWithHook\r\n\t\t\t\t\tstatus={props.status}\r\n\t\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{isOwner && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={goToEditMode}>edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<b>Full Name</b> {profile.fullName}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>looking for job</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n\t\t\t</div>\r\n\t\t\t{profile.lookingForAJob && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>My professional skills</b> {profile.lookingForAJobDescription}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<b>About me</b> {profile.aboutMe}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<b>Contacts</b>:\r\n\t\t\t\t{Object.keys(profile.contacts).map(key => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Contact\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tcontactTitle={key}\r\n\t\t\t\t\t\t\tcontactValue={profile.contacts[key]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n\treturn (\r\n\t\t<div className={style.contact}>\r\n\t\t\t<b>{contactTitle}</b>:{contactValue}\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default ProfileInfo\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__xPwb5\",\"posts\":\"MyPosts_posts__9E-kw\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Posts_item__bhrYq\"};","import React from 'react'\r\nimport c from './Posts.module.css'\r\nconst Posts = props => {\r\n\treturn (\r\n\t\t<div className={c.item}>\r\n\t\t\t<img src='https://cspromogame.ru//storage/upload_images/avatars/1299.jpg'></img>\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like {props.count}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Posts\r\n","import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {\r\n\tmaxLengthCreator,\r\n\trequiredField,\r\n} from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../common/FormsControls/FormsControls'\r\nimport c from './MyPosts.module.css'\r\nimport Posts from './Posts/Posts'\r\nconst MyPosts = props => {\r\n\tlet postsElement = props.postsData.map(posts => (\r\n\t\t<Posts key={posts.id} message={posts.message} count={posts.liKesCount} />\r\n\t))\r\n\tlet addPost = values => {\r\n\t\tprops.addPost(values.newPostText)\r\n\t}\r\n\treturn (\r\n\t\t<div className={c.postsBlock}>\r\n\t\t\t<h3>My post</h3>\r\n\t\t\t<AddNewPostFormRedux onSubmit={addPost} />\r\n\t\t\t<div className={c.posts}>{postsElement}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nconst AddNewPostForm = props => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname='newPostText'\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tvalidate={[requiredField, maxLengthCreator(10)]}\r\n\t\t\t\t\tplaceholder='post message'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button>add post</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\nconst AddNewPostFormRedux = reduxForm({ form: 'profileAddNewPostForm' })(\r\n\tAddNewPostForm\r\n)\r\nexport default MyPosts\r\n","import React from 'react'\r\nimport { addPostActionCreator } from '../../../Redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport { connect } from 'react-redux'\r\nlet mapStateToProps = State => {\r\n\treturn {\r\n\t\tpostsData: State.profilePage.postsData,\r\n\t\tnewPostText: State.profilePage.newPostText,\r\n\t}\r\n}\r\nlet mapsDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\taddPost: newPostText => {\r\n\t\t\tdispatch(addPostActionCreator(newPostText))\r\n\t\t},\r\n\t}\r\n}\r\nconst MyPostsConteiner = connect(mapStateToProps, mapsDispatchToProps)(MyPosts)\r\nexport default MyPostsConteiner\r\n","import React from 'react'\r\nimport c from './Profile.module.css'\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo'\r\nimport MyPostsConteiner from './MyPosts/MyPostsConteiner'\r\n\r\nconst Profile = props => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo\r\n\t\t\t\tprofile={props.profile}\r\n\t\t\t\tstatus={props.status}\r\n\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t\tsaveProfile={props.saveProfile}\r\n\t\t\t/>\r\n\t\t\t<MyPostsConteiner />\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Profile\r\n","import React from 'react'\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tgetUsersProfile,\r\n\tgetStatus,\r\n\tupdateStatus,\r\n\tsavePhoto,\r\n\tsaveProfile,\r\n} from '../../Redux/profile-reducer'\r\nimport { useParams, useLocation, useNavigate } from 'react-router-dom'\r\nimport { withAuthRedirect } from '../HOC/AuthRedirect'\r\nimport { compose } from 'redux'\r\nclass ProfileConteiner extends React.Component {\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.router.params.userId\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.AuthorizedUserId\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push('/login')\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUsersProfile(userId)\r\n\t\tthis.props.getStatus(userId)\r\n\t\tconsole.log(this.props.getStatus(userId))\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile()\r\n\t}\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (this.props.router.params.userId != prevProps.router.params.userId) {\r\n\t\t\tthis.refreshProfile()\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Profile\r\n\t\t\t\t{...this.props}\r\n\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\tstatus={this.props.status}\r\n\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\tisOwner={!this.props.router.params.userId}\r\n\t\t\t\tsavePhoto={this.props.savePhoto}\r\n\t\t\t/>\r\n\t\t)\r\n\t}\r\n}\r\nlet mapStateToProps = State => ({\r\n\tprofile: State.profilePage.profile,\r\n\tstatus: State.profilePage.status,\r\n\tAuthorizedUserId: State.auth.userid,\r\n\tisAuth: State.auth.isAuth,\r\n})\r\nfunction withRouter(Component) {\r\n\tfunction ComponentWithRouterProp(props) {\r\n\t\tlet location = useLocation()\r\n\t\tlet navigate = useNavigate()\r\n\t\tlet params = useParams()\r\n\t\treturn <Component {...props} router={{ location, navigate, params }} />\r\n\t}\r\n\r\n\treturn ComponentWithRouterProp\r\n}\r\nexport default compose(\r\n\tconnect(mapStateToProps, {\r\n\t\tgetUsersProfile,\r\n\t\tgetStatus,\r\n\t\tupdateStatus,\r\n\t\tsavePhoto,\r\n\t\tsaveProfile,\r\n\t}),\r\n\twithRouter,\r\n\twithAuthRedirect\r\n)(ProfileConteiner)\r\n"],"names":["mapStateToPropsForRedirect","State","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","useState","editMode","setEditmode","status","setStatus","useEffect","onDoubleClick","onChange","event","currentTarget","value","autoFocus","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","CreateField","Input","type","Textarea","Object","keys","contacts","map","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","src","photos","large","userPhoto","e","target","files","length","savePhoto","initialValues","formData","saveProfile","then","console","log","c","message","count","AddNewPostFormRedux","Field","name","component","validate","requiredField","maxLengthCreator","placeholder","postsElement","postsData","posts","liKesCount","id","values","addPost","newPostText","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileConteiner","userId","router","params","AuthorizedUserId","history","push","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","userid","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}